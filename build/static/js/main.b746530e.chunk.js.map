{"version":3,"sources":["image/noImage.png","BooksAPI.js","ChangeShelf.js","Book.js","SearchBooks.js","BookShelf.js","BookList.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","changeShelf","props","currentShelf","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","shelfBook","value","err","return","react_default","a","createElement","className","onChange","event","newShelf","target","BooksAPI","defaultValue","disabled","Book","title","author","authors","coverImg","imageLinks","thumbnail","noImage","style","width","height","backgroundImage","ChangeShelf","SearchBooks","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getBooks","setState","trim","length","searchResults","searchError","state","_this$state","_this$props","react_router_dom","to","type","placeholder","map","src_Book","key","Component","BookShelf","BookList","index","shelfBooks","filter","src_BookShelf","BooksApp","response","prevState","prevBook","_this2","_this3","react_router","path","render","src_SearchBooks","exact","src_BookList","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b746530e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noImage.83cf9178.png\";","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react';\nimport * as BooksAPI from './BooksAPI';\n\nconst changeShelf = props => {\n  const { book, books, changeShelf } = props;\n\n  const handleOnChange = event => {\n    const newShelf = event.target.value;\n    BooksAPI.update(book, newShelf).then(shelf => {\n      changeShelf(book, newShelf);\n    });\n  }\n\n  let currentShelf = 'none';\n\n  for (let shelfBook of books) {\n    if (shelfBook.id === book.id) {\n      currentShelf = shelfBook.shelf;\n      break;\n    }\n  }\n\n  return (\n    <div className=\"book-shelf-changer\" >\n      <select onChange={handleOnChange} defaultValue={currentShelf}>\n        <option value=\"move\" disabled>Move to...</option>\n        <option value=\"currentlyReading\">Currently Reading</option>\n        <option value=\"wantToRead\">Want to Read</option>\n        <option value=\"read\">Read</option>\n        <option value=\"none\">None</option>\n      </select>\n    </div>\n  )\n}\n\n\nexport default changeShelf","import React from 'react';\nimport ChangeShelf from './ChangeShelf';\nimport noImage from './image/noImage.png';\n\nconst Book = props => {\n  const { book, books, changeShelf } = props;\n\n  const title = book.title ? book.title : \"No title available\";\n  const author = book.authors ? book.authors[0] : \"\";\n  const coverImg = book.imageLinks && book.imageLinks.thumbnail\n    ? book.imageLinks.thumbnail\n    : noImage;\n\n  return (\n    <li>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div className=\"book-cover\" style={{\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${coverImg})`,\n          }}>\n          </div>\n          <ChangeShelf\n            book={book}\n            books={books}\n            changeShelf={changeShelf} />\n        </div>\n      </div>\n      <div className=\"book-title\">{title}</div>\n      <div className=\"book-authors\">{author}</div>\n    </li >\n  )\n}\n\nexport default Book","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI';\nimport Book from './Book';\n\nclass SearchBooks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: '',\n      searchResults: [],\n      searchError: false,\n    };\n  }\n\n  getBooks = event => {\n    const query = event.target.value\n    this.setState({ query })\n\n\n    //if there is user input\n    if (query) {\n      BooksAPI.search(query.trim(), 20).then(books => {\n        books.length > 0\n          ? this.setState({ searchResults: books, searchError: false })\n          : this.setState({ searchResults: [], searchError: true });\n      });\n    } else this.setState({ searchResults: [], searchError: false });\n  };\n\n\n\n  render() {\n    const { query, searchResults, searchError } = this.state;\n    const { books, changeShelf } = this.props;\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link to=\"/\" className=\"close-search\">\n            Close\n            </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              value={query}\n              onChange={this.getBooks}\n              type=\"text\"\n              placeholder=\"Search by title or author\" />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          {searchResults.length > 0 &&\n            <div>\n              <h3>Search returned {searchResults.length} books: </h3>\n              <ol className=\"books-grid\">\n                {searchResults.map(book => (\n                  <Book\n                    key={book.id}\n                    book={book}\n                    books={books}\n                    changeShelf={changeShelf} />\n                ))}\n              </ol>\n            </div>\n          }\n          {searchError &&\n            <h3>Sorry, nothing came up in the search.</h3>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBooks","import React from 'react';\nimport Book from './Book';\n\nconst BookShelf = props => {\n  const { books, changeShelf } = props;\n\n  return (\n    <div className=\"bookshelf-books\">\n      <ol className=\"books-grid\">\n        {books.map(book =>\n          <Book\n            key={book.id}\n            book={book}\n            books={books}\n            changeShelf={changeShelf}\n          />\n        )}\n      </ol>\n    </div>\n  )\n}\n\nexport default BookShelf","import React from 'react';\nimport BookShelf from './BookShelf';\n\nconst BookList = props => {\n  const { books, changeShelf } = props;\n  const shelves = [\n    { type: \"currentlyReading\", title: \"Currently Reading\" },\n    { type: \"wantToRead\", title: \"Want to Read\" },\n    { type: \"read\", title: \"Read\" },\n  ];\n\n  return (\n    <div>\n      {shelves.map((shelf, index) => {\n        const shelfBooks = books.filter(book => book.shelf === shelf.type)\n\n        return (\n          <div key={index} className=\"bookshelf\" >\n            <h2 className=\"bookshelf-title\">{`${shelf.title}`}</h2>\n            <BookShelf\n              key={index}\n              books={shelfBooks}\n              changeShelf={changeShelf}\n            />\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default BookList","import React, { Component } from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport SearchBooks from './SearchBooks';\nimport { Link, Route } from 'react-router-dom';\nimport BookList from './BookList';\n\nclass BooksApp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      books: []\n    };\n  }\n\n  changeShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf).then(response => {\n      book.shelf = shelf;\n      this.setState(prevState => ({\n        books: prevState.books\n          .filter(prevBook => prevBook.id !== book.id)\n          .concat(book)\n      }));\n    });\n  }\n\n  componentDidMount() {\n    // Retrieves all books on the 3 shelves\n    BooksAPI.getAll()\n      .then(books => this.setState({ books }));\n  }\n\n  render() {\n    const { books } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Route path=\"/search\" render={() => (\n          <SearchBooks books={books} changeShelf={this.changeShelf} />\n        )} />\n        <Route exact path=\"/\" render={() => (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>My Bookshelf</h1>\n            </div>\n            <div className=\"list-books-content\">\n              {books.length > 0 &&\n                <BookList books={books} changeShelf={this.changeShelf} />}\n            </div>\n            <div className=\"open-search\">\n              <Link to=\"/search\"></Link>\n            </div>\n          </div>\n        )} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}